{"version":3,"sources":["components/Todo.js","components/Overview.js","App.js","index.js"],"names":["Todo","props","state","isEditing","this","todo","editTodoWithId","editingTemplate","type","value","title","onChange","e","id","normalTemplate","editButton","className","onClick","setState","saveButton","removeTodo","Component","Overview","todos","map","App","count","editTodoTitle","bind","saveTodo","target","editedTaskList","preventDefault","concat","nanoid","filteredTodos","filter","length","onSubmit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f030c241.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Todo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEditing: false\n          };\n      \n    }\n\n    render() {\n        let { todo, editTodoWithId } = this.props;\n\n        const editingTemplate = (<input type=\"text\" value={todo.title} onChange={(e) => editTodoWithId(todo.id, e)}></input>);\n        const normalTemplate = (<p>{todo.title}</p>)\n        \n        let editButton = <a className=\"todo-button\" onClick={() => this.setState({isEditing: !this.state.isEditing})}>Edit</a>\n        let saveButton = <a className=\"todo-button\" onClick={() => this.setState({isEditing: !this.state.isEditing})}>Save</a>\n\n        return (\n            <div className=\"todo-item\">\n                {this.state.isEditing ? editingTemplate : normalTemplate}\n                <div className=\"buttons\">\n                    {this.state.isEditing ? saveButton : editButton}\n                    <a className=\"todo-button\" onClick={() => this.props.removeTodo(todo.id)}>Delete</a> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Todo","import React, { Component } from 'react'\nimport Todo from './Todo';\n\nclass Overview extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEditing: false\n          };\n      \n    }\n\n    render() {\n        return (\n            <div id=\"list\">\n                {this.props.todos.map((todo) => {\n                    return <Todo todo={todo} editTodoWithId={this.props.editTodoWithId} removeTodo={this.props.removeTodo} key={todo.id}/>\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Overview","import React, { Component } from \"react\";\nimport Overview from './components/Overview';\n\nimport { nanoid } from \"nanoid\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todo: \"\",\n      todos: [],\n      count: 0\n    };\n\n    this.editTodoTitle = this.editTodoTitle.bind(this);\n    this.saveTodo = this.saveTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.editTodoWithId = this.editTodoWithId.bind(this);\n  }\n\n  editTodoTitle(e) {\n    this.setState({\n      todo: e.target.value\n    })\n  }\n\n  editTodoWithId(id, e) {\n    const { todos } = this.state;\n\n    const editedTaskList = todos.map(todo => {\n      // if this task has the same ID as the edited task\n        if (id === todo.id) {\n          //\n          return {...todo, title: e.target.value};\n        }\n        return todo;\n    });\n\n    this.setState({\n      todos: editedTaskList\n    })  \n  }\n\n  saveTodo(e) {    \n    e.preventDefault();\n\n    if (this.state.todo !== \"\")\n    {\n      this.setState({\n        todo: \"\",\n        todos: this.state.todos.concat({title: this.state.todo, id: nanoid()}),\n        count: this.state.count + 1\n      });\n    } \n\n  }\n\n  removeTodo(id) {\n    let filteredTodos = this.state.todos.filter(function(todo){ \n        return todo.id !== id; \n    });\n    this.setState({\n      todos: filteredTodos,\n      count: this.state.todos.length - 1\n    });\n  }\n\n  render() {\n    const { todo, todos, count } = this.state;\n\n    return (\n        <div>\n          <h3>Number of tasks: {this.state.count}</h3>\n          <form onSubmit={this.saveTodo}>\n            <input type=\"text\" value={todo} onChange={this.editTodoTitle} />\n            <a className=\"button\" onClick={this.saveTodo}>Create</a>\n          </form>\n        <Overview todos={todos} count={count} removeTodo={this.removeTodo} editTodoWithId={this.editTodoWithId}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}